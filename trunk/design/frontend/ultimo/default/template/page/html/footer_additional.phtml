<?php
/**
 * Additional scripts
 */
?>

<?php
	//Get grid configuration array
	$theme = $this->helper('ultimo');
	$gc = $theme->getCfgGroup('category_grid');
?>
<script type="text/javascript">

	<?php //Products grid: set equal height for grid items ?>
	<?php if ($gc['equal_height']): ?>
	function setGridItemsEqualHeight($)
	{
		var SPACING = 20;
		if ($(window).width() >= 480)
		{
			$('.category-products-grid').removeClass("auto-height");
			
			var gridItemMaxHeight = 0;
			$('.category-products-grid > .item').each(function() {
				$(this).css("height", "auto");
				
				////////////////////////////////////////////////////////////////
				<?php if ($gc['display_addtocart'] == 2 || $gc['display_addtolinks'] == 2): ?>
					var actionsHeight = $(this).find('.actions').height();
					$(this).css("padding-bottom", (actionsHeight + SPACING) + "px"); //Set new padding
				<?php endif; ?>
				////////////////////////////////////////////////////////////////
				
				gridItemMaxHeight = Math.max(gridItemMaxHeight, $(this).height());
			});
			
			//Apply max height
			$('.category-products-grid > .item').css("height", gridItemMaxHeight + "px");
		}
		else
		{
			$('.category-products-grid').addClass("auto-height");
			$('.category-products-grid > .item').css("height", "auto");
			$('.category-products-grid > .item').css("padding-bottom", "20px");
		}
	}
	<?php endif; ?>
	
	<?php //Mobile menu ?>
	function activateMobileMenu($)
	{
		if ($(window).width() < 1024)
		{
			$('#mobnav').show();
			$('.vertnav-top').addClass('mobile');
			$('#nav').addClass('mobile');
		}
		else
		{
			$('#nav').removeClass('mobile');
			$('.vertnav-top').removeClass('mobile');
			$('#mobnav').hide();
		}
	}
	
	

	jQuery(function($) {

		$(".data-table td:contains('Nein')").parent().hide();
		
		<?php //Activate mobile menu ?>
		activateMobileMenu(jQuery);
		
		
		<?php //Collapsible: init TODO:test again ?>
		$('.collapsible').each(function(index){
			$(this).prepend('<span class="opener">&nbsp;</span>');
			if ($(this).hasClass('active'))
			{
				$(this).children('.block-content').css('display', 'block');
			}
			else
			{
				$(this).children('.block-content').css('display', 'none');
			}			
		});
		<?php //Collapsible: toggle ?>
		$('.collapsible .opener').click(function() {
			
			var parent = $(this).parent();
			if (parent.hasClass('active'))
			{
				$(this).siblings('.block-content').stop(true).slideUp(300, "easeOutCubic");
				parent.removeClass('active');
			}
			else
			{
				$(this).siblings('.block-content').stop(true).slideDown(300, "easeOutCubic");
				parent.addClass('active');
			}
			
		});
		
		
		<?php //Drop-down ?>
		var ddOpenTimeout;
		var dMenuPosTimeout;
		$(".clickable-dropdown > .dropdown-toggle").click(function() {
			$(this).parent().addClass('open');
			$(this).parent().trigger('mouseenter');
		});
		$(".dropdown").hover(function() {
			
			var DELAY = 300;
			var ddToggle = $(this).children('.dropdown-toggle');
			var ddMenu = $(this).children('.dropdown-menu');
			var ddWrapper = ddMenu.parent(); <?php //$(this); ?>
			
			<?php //Clear old position of dd menu ?>
			ddMenu.css("left", "");
			ddMenu.css("right", "");
			
			<?php //Show dd menu ?>
			if ($(this).hasClass('clickable-dropdown'))
			{
				<?php //If dropdown is opened (parent already has class 'open') ?>
				if ($(this).hasClass('open'))
				{
					$(this).children('.dropdown-menu').stop(true, true).delay(DELAY).fadeIn(300, "easeOutCubic");
				}
			}
			else
			{
				<?php //Add class 'open' to dd ?>
				clearTimeout(ddOpenTimeout);
				ddOpenTimeout = setTimeout(function() {
					
					ddWrapper.addClass('open');
					
				}, DELAY);
				
				//$(this).addClass('open');
				$(this).children('.dropdown-menu').stop(true, true).delay(DELAY).fadeIn(300, "easeOutCubic");
			}
			
			<?php //Set new position of dd menu.
			      //This code is delayed 150ms, same as drop-down animation. ?>
			clearTimeout(dMenuPosTimeout);
			dMenuPosTimeout = setTimeout(function() {

				if (ddMenu.offset().left < 0)
				{
					var space = ddWrapper.offset().left; <?php //Space available on the left of dd ?>
					ddMenu.css("left", (-1)*space);
					ddMenu.css("right", "auto");
				}
			
			}, DELAY);
			
		}, function() {
			var ddMenu = $(this).children('.dropdown-menu');
			clearTimeout(ddOpenTimeout); <?php //Clear, to close dd on mouseleave ?>
			ddMenu.stop(true, true).delay(150).fadeOut(300, "easeInCubic");
			if (ddMenu.is(":hidden"))
			{
				ddMenu.hide();
			}
			$(this).removeClass('open');
		});


		<?php //Toggle mobile menu ?>
		$('#mobnav-trigger').toggle(function() {
			$(this).addClass('active');
			$('.vertnav-top').addClass('show');
		}, function() {
			$(this).removeClass('active');
			$('.vertnav-top').removeClass('show');
		});
		
		
		<?php //Shadow class for main content area ?>
		<?php if ($theme->isColor( $theme->getDesignCfg('main/inner_bg_color') )): ?>
			$(".main").addClass("show-bg");
		<?php endif; ?>
		
		
		<?php //Back to top ?>
		$(window).scroll(function(){
			if ($(this).scrollTop() > 100)
			{
				$('#scroll-to-top').fadeIn();
			}
			else
			{
				$('#scroll-to-top').fadeOut();
			}
		});
		$('#scroll-to-top').click(function(){
			$("html, body").animate({scrollTop: 0}, 600, "easeOutCubic");
			return false;
		});
		
		
		<?php //Products grid: item on hover ?>
		<?php if ($gc['hover_effect']): ?>
		
			var startHeight;
			var bpad;
			$('.category-products-grid > .item').hover(function() {

				startHeight = $(this).height();
				$(this).css("height", "auto"); //Release height
				$(this).find(".display-onhover").fadeIn(400, "easeInCubic"); //Show elements visible on hover
				var h2 = $(this).height();
				
				<?php //Compare start height with on-hover height, calculate the difference ?>
				////////////////////////////////////////////////////////////////
				var addtocartHeight = 0;
				var addtolinksHeight = 0;
				
				<?php if ($gc['display_addtocart'] == 1): //if displayed on hover ?>
					//addtocartHeight = $(this).find('.btn-cart').height(); //obsolet
					var buttonOrStock = $(this).find('.btn-cart');
					if (buttonOrStock.length == 0) buttonOrStock = $(this).find('.availability');
					addtocartHeight = buttonOrStock.height();
					
				<?php endif; ?>
				
				<?php if ($gc['display_addtolinks'] == 1): //if displayed on hover (but when is NOT on image) ?>
					var addtolinksEl = $(this).find('.add-to-links');
					if (addtolinksEl.hasClass("addto-onimage") == false)
						addtolinksHeight = addtolinksEl.height();
				<?php endif; ?>
				
				<?php if ($gc['equal_height']
					&& ($gc['display_addtocart'] == 1 || $gc['display_addtolinks'] == 1)):
				?>
					var h3 = h2 + addtocartHeight + addtolinksHeight;
					var diff = 0;
					if (h3 < startHeight)
					{
						$(this).height(startHeight);
					}
					else
					{
						$(this).height(h3); <?php //Apply height explicitly ?>
						diff = h3 - startHeight;
					}
				<?php else: ?>
					var diff = 0;
					if (h2 < startHeight)
					{
						$(this).height(startHeight);
					}
					else
					{
						$(this).height(h2);
						diff = h2 - startHeight;
					}
				<?php endif; ?>
				////////////////////////////////////////////////////////////////

				$(this).css("margin-bottom", "-" + diff + "px"); <?php //Apply difference as nagative margin ?>
				
			}, function() {
				
				//Clean up
				$(this).find(".display-onhover").hide();
				$(this).css("margin-bottom", "");

				<?php //Return the default height. If "Egual Height" disabled, unset item's height. ?>
				<?php if ($gc['equal_height']): ?>
					$(this).height(startHeight);
				<?php else: ?>
					$(this).css("height", "");
				<?php endif; ?>
				
			});
		
		<?php else: ?>
		
			<?php //Display elements visible on hover ?>
			$('.category-products-grid > .item').hover(function() {
				$(this).find(".display-onhover").fadeIn(400, "easeInCubic");
			}, function() {
				$(this).find(".display-onhover").hide();
			});
		
		<?php endif; ?>
		
		
		
		<?php //On resize ?>
		//Window size variables
		var winWidth = $(window).width();
		var winHeight = $(window).height();
		var t;
		$(window).resize(function() {

			<?php //Prevent from firing the event in IE when the window wasn't actually resized. ?>
			var winNewWidth = $(window).width();
			var winNewHeight = $(window).height();
			if (winWidth != winNewWidth || winHeight != winNewHeight)
			{

				clearTimeout(t);
				t = setTimeout(function() {

					<?php //Products grid: equal height of items ?>
					<?php if ($gc['equal_height']): ?>
						setGridItemsEqualHeight($);
					<?php endif; ?>
				
					<?php //Itemsliders rollback ?>
					$('.itemslider').each(function(index){
						var s = $(this).data('flexslider');
						if (s != null) s.flexAnimate(0);
					});
				
					<?php //Activate mobile menu ?>
					activateMobileMenu($);
				
				}, 100);

			} //end: if
			//Update window size variables
			winWidth = winNewWidth;
			winHeight = winNewHeight;

		}); //end: on resize
		
		

	}); /* end: jQuery(){...} */
	
	
	
	jQuery(window).load(function(){
		
		<?php //Products grid: equal height of items ?>
		<?php if ($gc['equal_height']): ?>
			setGridItemsEqualHeight(jQuery);
		<?php endif; ?>

	}); /* end: jQuery(window).load(){...} */
	
</script>
